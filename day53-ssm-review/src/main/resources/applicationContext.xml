<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd">

    <!--1. 管理dao层-->

    <!--1.1 加载jdbc.properties文件-->
    <context:property-placeholder location="classpath:jdbc.properties"/>

    <!--1.2 创建连接池-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="${jdbc.driver}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>


    <!--1.3 扫描dao接口包-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.heima.dao"/>
    </bean>


    <!--1.4 创建SqlSessionFactoryBean通过该对象创建接口的代理对象-->
    <bean class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--配置连接池-->
        <property name="dataSource" ref="dataSource"/>
        <!--别名扫描实体类包-->
        <property name="typeAliasesPackage" value="com.heima.domain"/>
    </bean>



    <!--2. 管理service层 , 事务管理-->

    <!--2.1 扫描service包-->
    <context:component-scan base-package="com.heima.service"/>

    <!--2.2 创建事务管理器-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>


    <!--2.3 编写事务的通知的规则-->
    <tx:advice id="ad" transaction-manager="transactionManager">
        <tx:attributes>
            <!--name:方法的名字   propagation：事务的传播行为  REQUIRED 必须有事务 SUPPORTS 可有可无
                查询的方法可有可无事务
                其他方法一定要有事务
            -->
            <tx:method name="find*" propagation="SUPPORTS"/>
            <tx:method name="select*" propagation="SUPPORTS"/>
            <tx:method name="query*" propagation="SUPPORTS"/>
            <tx:method name="search*" propagation="SUPPORTS"/>
            <tx:method name="get*" propagation="SUPPORTS"/>
            <tx:method name="*" propagation="REQUIRED"/>
        </tx:attributes>
    </tx:advice>


    <!--2.4 把切入点与通知规则形成切面-->
    <aop:config>
        <!--切入点表达式   -->
        <aop:pointcut id="pt" expression="execution(* com.itheima.service.impl.*.*(..))"/>
        <aop:advisor advice-ref="ad" pointcut-ref="pt"/>
    </aop:config>





</beans>