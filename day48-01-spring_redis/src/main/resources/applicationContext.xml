<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!--======================spring整合redis========================-->
    <!--1. 创建redis的独立配置类  配置redis的ip地址与端口-->
    <bean id="standaloneConfiguration" class="org.springframework.data.redis.connection.RedisStandaloneConfiguration">
        <!--连接redis的主机名（ip地址）-->
        <property name="hostName" value="localhost"/>
        <!--redis使用的端口-->
        <property name="port" value="6379"/>
    </bean>
    <!--2. 创建jedis连接工厂-->
    <bean id="connectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <constructor-arg ref="standaloneConfiguration"/>
    </bean>
    <!--3. 创建RedisTemplate对象  由于我们常用的数据类型是string类型，而值部分我们有时候是需要存储
    一个java对象，所以这里配置序列化器
        比如：
            redisTenmplate.set(字符串，java对象);  这里只能存储字符串
    -->
    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
        <!--配置连接工厂-->
        <property name="connectionFactory" ref="connectionFactory"/>

        <!--配置序列化器-->
        <!--配置键的序列化器-->
        <property name="keySerializer">
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>
        </property>
        <!--配置值的序列化器-->
        <property name="valueSerializer">
            <bean class="org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer"/>
        </property>
    </bean>




</beans>